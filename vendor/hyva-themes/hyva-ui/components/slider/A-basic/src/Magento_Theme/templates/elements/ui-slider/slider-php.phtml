<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Hyva\Theme\ViewModel\Store;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

// phpcs:disable Generic.Files.LineLength.TooLong

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var Store $viewModelStore */
$viewModelStore = $viewModels->require(Store::class);

/** @var HeroiconsSolid $heroiconsSolid */
$heroiconsSolid = $viewModels->require(HeroiconsSolid::class);

$title = (string) $block->getTitle();
$items = $block->getItems() ?? [];

if (is_object($items) && $items instanceof Iterator) {
    $items = iterator_to_array($items);
}

if (!$itemCount = count($items)) {
    return '';
}

$sliderShowArrows = $block->getShowArrows() !== null ? $block->getShowArrows() : "end";
$sliderShowDots = $block->getShowDots() !== null ? $block->getShowDots() : true;
$sliderShowNav = $sliderShowArrows || $sliderShowDots;
$loadFirstEager = (bool) $block->getLoadFirstEager();

$sliderItemRenderer = $block->getChildBlock('slider.item.template');
?>

<?php if ($items): ?>
    <section
        class="relative"
        aria-roledescription="<?= $escaper->escapeHtml(__('Slider')) ?>"
        aria-label="<?= $escaper->escapeHtml(__('Latest items')) ?>"
        :aria-describedby="$id('slider-desc')"
        x-data="initSliderComponent()"
        x-defer="intersect"
        x-init="calcPageSize();"
        x-id="['slider-nav', 'slider-end', 'slider-desc']"
        @resize.window.debounce="calcPageSize(); $nextTick( function() { calcActive() })"
    >
        <span class="sr-only" tabindex="-1" :id="$id('slider-desc')">
            <?= $escaper->escapeHtml(__(
                'Navigating through the elements of the carousel is possible using the tab key.' .
                'You can skip the carousel or go straight to carousel navigation using the skip links.'
            )) ?>
        </span>
        <a
            :href="`#${$id('slider-end')}`"
            class="action skip sr-only focus:not-sr-only focus:absolute focus:z-30 focus:bg-white"
        >
            <?= $escaper->escapeHtml(__('Press to skip the slider')) ?>
        </a>
        <?php if ($sliderShowNav): ?>
            <button
                x-show="itemCount > pageSize"
                type="button"
                class="action skip sr-only focus:not-sr-only focus:absolute focus:z-30 focus:bg-white"
                @click.prevent="skipCarouselToNavigation($id('slider-nav'))"
            >
                <?= $escaper->escapeHtml(__('Press to go to carousel navigation')) ?>
            </button>
        <?php endif; ?>
        <div class="relative w-full overflow-x-hidden focus-within:ring-1 active:ring-0 ring-blue-500 ring-opacity-50">
            <div
                class="relative flex flex-nowrap w-full overflow-auto transition-all js_slides snap"
                @scroll.debounce="calcActive"
            >
                <?php
                    $sliderIndex = 1;
                    foreach ($items as $item):
                ?>
                    <?php
                        $imageAttributes = ['loading' => 'lazy'];

                        if ($loadFirstEager && $sliderIndex === 1) {
                            $imageAttributes = ['loading' => 'eager', 'fetchpriority' => 'high'];
                        }
                    ?>
                    <div
                        role="group"
                        class="relative flex shrink-0 w-full js_slide"
                        aria-label="<?= $escaper->escapeHtmlAttr(__('Slide %1 of %2', $sliderIndex, count($items))) ?>"
                        aria-roledescription="<?= $escaper->escapeHtml(__('Slide')) ?>"
                        :aria-hidden="<?= (int) $sliderIndex ?> > active && <?= (int) $sliderIndex ?> <= (active + pageSize) ? 'false' : 'true'"
                    >
                        <?= $sliderItemRenderer
                            ->setItem($item)
                            ->setImageAttributes($imageAttributes)
                            ->toHtml() ?>
                    </div>
                    <?php $sliderIndex++; ?>
                <?php endforeach; ?>
            </div>
        </div>
        <?php if ($sliderShowNav): ?>
            <template x-if="itemCount > pageSize">
                <nav
                    aria-label="<?= $escaper->escapeHtml(__('Slider controls')) ?>"
                    :id="$id('slider-nav')"
                >
                    <?php if ($sliderShowArrows): ?>
                        <div class="flex gap-2 absolute bottom-4 sm:-translate-y-1/2 sm:top-1/2 sm:bottom-auto sm:inset-x-4
                            <?= $sliderShowArrows === "end" ? "right-4" : ($sliderShowArrows === "start" ? "left-4" : "inset-x-4") ?> justify-between">
                            <button
                                role="button"
                                aria-label="<?= $escaper->escapeHtml(__('Previous slide')) ?>"
                                class="shrink-0 p-2.5 rounded-full transition disabled:opacity-30 shadow hover:shadow-primary/30 focus:shadow-primary/30 bg-white text-primary"
                                :disabled="active === 0"
                                @click="scrollPrevious"
                            >
                                <?= $heroiconsSolid->arrowLeftHtml("", 20, 20, ['aria-hidden' => 'true']) ?>
                            </button>
                            <button
                                role="button"
                                aria-label="<?= $escaper->escapeHtml(__('Next slide')) ?>"
                                class="shrink-0 p-2.5 rounded-full transition disabled:opacity-30 shadow hover:shadow-primary/30 focus:shadow-primary/30 bg-white text-primary"
                                :disabled="active >= itemCount-pageSize"
                                @click="scrollNext"
                            >
                                <?= $heroiconsSolid->arrowRightHtml("", 20, 20, ['aria-hidden' => 'true']) ?>
                            </button>
                        </div>
                    <?php endif; ?>
                    <?php if ($sliderShowDots): ?>
                    <div class="hidden sm:flex gap-4 justify-center items-center mt-7 absolute w-full bottom-8">
                        <?php for ($i=0; $i < $itemCount; $i++): ?>
                            <button
                                role="button"
                                aria-label="<?= $escaper->escapeHtmlAttr(__('Show slide %1 of %2', $i + 1, $itemCount)) ?>"
                                class="w-4 h-4 rounded-full shadow-md cursor-pointer ring-4 ring-transparent hover:bg-blue-600 transition"
                                @click="scrollTo(<?= (int) $i ?>)"
                                :class="{
                                    'bg-blue-600 ring-white': active === <?= (int) $i ?>,
                                    'bg-white ring-transparent': active !== <?= (int) $i ?>,
                                    'hidden': (pageSize !== 1 && !!(<?= (int) $i ?> % pageSize))
                                }"
                            >
                            </button>
                        <?php endfor; ?>
                    </div>
                    <?php endif; ?>
                </nav>
            </template>
        <?php endif; ?>
        <span :id="$id('slider-end')" tabindex="-1"></span>
    </section>
    <script>
        function initSliderComponent() {
            return {
                active: 0,
                itemCount: 0,
                getSlider() {
                    return this.$root.querySelector('.js_slides');
                },
                pageSize: 1,
                pageFillers: 0,
                calcPageSize() {
                    const slider = this.getSlider();
                    if (slider) {
                        this.itemCount = slider.querySelectorAll('.js_slide').length;
                        this.pageSize = Math.round(slider.clientWidth / slider.querySelector('.js_slide').clientWidth);
                        this.pageFillers = (
                            this.pageSize * Math.ceil(this.itemCount / this.pageSize)
                        ) - this.itemCount;
                    }
                },
                calcActive() {
                    const slider = this.getSlider();
                    if (slider) {
                        const sliderItems = this.itemCount + this.pageFillers;
                        const calculatedActiveSlide = slider.scrollLeft / (slider.scrollWidth / sliderItems);
                        this.active = Math.round(calculatedActiveSlide / this.pageSize) * this.pageSize;
                    }
                },
                scrollPrevious() {
                    this.scrollTo(this.active - this.pageSize);
                },
                scrollNext() {
                    this.scrollTo(this.active + this.pageSize);
                },
                scrollTo(idx) {
                    const slider = this.getSlider();
                    if (slider) {
                        const slideWidth = slider.scrollWidth / (this.itemCount + this.pageFillers);
                        slider.scrollLeft = Math.floor(slideWidth) * idx;
                        this.active = idx;
                    }
                },
                skipCarouselToNavigation(navSelector) {
                    const element = document.getElementById(navSelector)
                    if (element) {
                        element.scrollIntoView({behavior: 'smooth', block: 'end'});
                        const button = element.querySelector('button:not([disabled])');
                        this.$nextTick(() => button && button.focus({preventScroll: true}))
                    }
                }
            }
        }
    </script>
<?php endif ?>
