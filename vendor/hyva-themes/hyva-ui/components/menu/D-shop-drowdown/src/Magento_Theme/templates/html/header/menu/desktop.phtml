<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Hyva\Theme\ViewModel\Navigation;
use Magento\Framework\View\Element\Template;
use Magento\Framework\Escaper;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

// phpcs:disable Generic.Files.LineLength.TooLong

/** @var Navigation $viewModelNavigation */
$viewModelNavigation = $viewModels->require(Navigation::class, $block);

/** @var HeroiconsSolid $heroiconsSolid */
$heroiconsSolid = $viewModels->require(HeroiconsSolid::class);

$uniqueId = '_' . uniqid();
$maxLevel = $block->getmaxLevel() ?: 3;

// Order is important here: 1. build the menu data, 2. then set the cache tags from the view model identities
$menu = $viewModelNavigation->getNavigation(2 + $maxLevel);
$block->setData('cache_tags', $viewModelNavigation->getIdentities());
?>

<nav
    class="navigation hidden lg:flex gap-1 items-center flex-wrap py-1"
    aria-label="<?= $escaper->escapeHtmlAttr(__('Main menu')) ?>"
    x-data="initMenuDesktop<?= $escaper->escapeHtml($uniqueId) ?>()"
    x-ref="nav-desktop"
    @load.window="setActiveMenu($root)"
>
    <div
        x-data="{ open: false }"
        @click.outside="open = false"
        @keydown.escape.stop="open = false;"
    >
        <button
            type="button"
            class="group btn justify-center rounded-md py-2 px-3 text-base font-bold shadow-none transition
                bg-blue-50 text-blue-800 hover:bg-blue-100 focus:ring-blue-200 active:bg-blue-100
                disabled:bg-slate-50 disabled:text-slate-600 disabled:opacity-70 focus:[&:not(:focus-visible)]:ring-0"
            @click="open = !open"
            aria-expanded="false"
            :aria-expanded="open"
            aria-controls="desktop-menu-panel"
        >
            <?= $escaper->escapeHtml(__('Shop')) ?>
            <?= $heroiconsSolid->chevronDownHtml(
                'transition group-aria-expanded:rotate-180',
                24,
                24,
                ['aria-hidden' => 'true']
            ) ?>
        </button>
        <div
            id="desktop-menu-panel"
            class="z-30 absolute inset-x-6 mt-1 flex flex-col min-h-64 border-t border-slate-100 rounded-b-md bg-white shadow-md overflow-auto"
            x-show="open === true"
            x-transition
            x-cloak
        >
            <ul class="flex flex-col gap-1 py-2.5 px-2 w-72">
                <?php foreach ($menu as $item): ?>
                    <?= $block->getLayout()->getBlock('topmenu_desktop_item')
                        ->setItem($item)
                        ->setLevel(0)
                        ->toHtml() ?>
                <?php endforeach; ?>
            </ul>
        </div>
    </div>
    <a
        href="<?= $escaper->escapeUrl('#') ?>"
        class="btn justify-center rounded-md py-2 px-3 text-base font-normal shadow-none transition bg-transparent text-current
            hover:bg-transparent hover:border-blue-100 hover:text-blue-800 focus:ring-blue-200 active:text-blue-800 aria-[current=page]:font-medium"
    >
        <?= $escaper->escapeHtml(__('Customer Service')) ?>
    </a>
</nav>
<script>
    const initMenuDesktop<?= $escaper->escapeHtml($uniqueId) ?> = () => {
        return {
            setActiveMenu(menuNode) {
                Array.from(menuNode.querySelectorAll('a')).filter(link => {
                    return link.href === window.location.href.split('?')[0];
                }).map(item => {
                    item.setAttribute('aria-current', 'page');

                    let menuLevelCount = 0;
                    while (menuLevelCount < <?= $maxLevel ?>) {
                        let selector = `.level-${menuLevelCount}`;
                        item.closest(selector)
                            && item.closest(selector).querySelector('button')
                            && item.closest(selector).querySelector('button').setAttribute('data-has-current', '');
                        menuLevelCount++;
                    }
                });
            }
        }
    }
</script>
